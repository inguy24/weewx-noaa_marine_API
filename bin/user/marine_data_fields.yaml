api_modules:
  coops_module:
    display_name: "NOAA CO-OPS (Tides & Currents)"
    description: "Real-time water levels, tide predictions, coastal water temperature"
    api_url: "https://api.tidesandcurrents.noaa.gov/api/prod/datagetter"
    metadata_url: "https://api.tidesandcurrents.noaa.gov/mdapi/prod/webapi/stations.json?expand=detail"
    station_info_url: "https://api.tidesandcurrents.noaa.gov/mdapi/prod/webapi/stations/{station_id}.json"
    products_url: "https://api.tidesandcurrents.noaa.gov/mdapi/prod/webapi/stations/{station_id}/products.json"
    datums_url: "https://api.tidesandcurrents.noaa.gov/mdapi/prod/webapi/stations/{station_id}/datums.json"
    metadata_api_url: "https://api.tidesandcurrents.noaa.gov/mdapi/prod/webapi/stations"
    metadata_datum_field: "referenceDatum"
    default_datum: "MLLW"
    default_products: "water_level,predictions,water_temperature"
    default_units: "metric"
    default_timezone: "gmt"
    product_parameters:
      predictions:
        interval: "hilo"
      water_level:
        interval: "6"
    recommended_interval: 600
    timeout: 30
    retry_attempts: 3
    config_module_name: "coops"
    interval_config_name: "coops_collection_interval"
    
    # NEW: Capability detection configuration
    product_capability_mapping:
      water_level_observed: ["Water Level", "water_level", "Verified Water Levels", "Hourly Height"]
      water_level_predicted: ["Predictions", "predictions", "Tide Predictions", "Harmonic Constituents"]
      tide_predictions: ["Predictions", "predictions", "High/Low Tide Predictions"]
      water_temperature: ["Water Temperature", "water_temperature", "water temp"]
      air_temperature: ["Air Temperature", "air_temperature", "air temp"]
      meteorological: ["Meteorological", "met", "Wind", "Barometric Pressure"]
      currents: ["Currents", "current", "Current Speed"]
    
    # Station type mapping from NOAA API
    station_type_mapping:
      S: subordinate
      R: reference
      O: observation
      unknown: observation
    
    # Datum requirements (which capabilities need datum information)
    datum_requirements:
      water_level_observed: true      # Only observed water level needs datums
      water_level_predicted: false    # Predictions don't need datums
      tide_predictions: false         # High/low predictions don't need datums
      water_temperature: false
      air_temperature: false
      meteorological: false
      currents: false
    
    # Prediction datum capabilities
    prediction_datum_capabilities: ["water_level_predicted", "tide_predictions"]
    
    # Datum preference order for station selection
    datum_preference_order: ["MLLW", "NAVD88", "MLW", "MSL", "MTL"]
    
    # Capability display names for GUI
    display_capabilities:
      water_level_observed: "Real-time Water Level"
      water_level_predicted: "Predicted Water Level"
      tide_predictions: "Tide Predictions"
      water_temperature: "Water Temperature"
      air_temperature: "Air Temperature"
      meteorological: "Weather Data"
      currents: "Current Data"
    
    # Field metadata
    orthometric_datum_field: "OrthometricDatum"
    water_level_observed_capability_name: "water_level_observed"
    water_level_predicted_capability_name: "water_level_predicted"
    tide_prediction_capability_name: "tide_predictions"
    
  ndbc_module:
    display_name: "NOAA NDBC (Marine Buoys)"
    description: "Offshore marine weather, waves, sea surface temperature"
    api_url: "https://www.ndbc.noaa.gov/data/realtime2"
    metadata_url: "https://www.ndbc.noaa.gov/activestations.xml"
    station_pattern: "https://www.ndbc.noaa.gov/data/realtime2/{station_id}.txt"
    recommended_interval: 3600
    timeout: 30
    retry_attempts: 3
    config_module_name: "ndbc"
    interval_config_name: "ndbc_collection_interval"
    
    # NEW: NDBC capabilities (file-based, all stations similar)
    typical_capabilities:
      - "Wave Height & Period"
      - "Marine Weather"
      - "Sea Surface Temperature"
      - "Wind Speed & Direction"
      - "Barometric Pressure"
      - "Air Temperature"

complexity_levels:
  minimal:
    description: "Essential marine data for basic coastal monitoring"
    target_field_count: 8
    includes: "Current water level, next tides, wave height, sea surface temperature, marine winds, barometric pressure"
    recommended_for: "Basic marine monitoring, small boats, fishing"
    estimated_api_calls_per_day: 288
    coverage: "Critical marine safety parameters"
    
  all:
    description: "Complete marine dataset with all available parameters"
    target_field_count: 18
    includes: "All minimal fields plus detailed wave analysis, marine meteorology, water quality"
    recommended_for: "Research, commercial marine operations, comprehensive monitoring"
    estimated_api_calls_per_day: 864
    coverage: "Complete marine environmental monitoring"
    
  custom:
    description: "User-selected fields for specific monitoring requirements"
    target_field_count: "Variable"
    includes: "User-specified subset of available marine parameters"
    recommended_for: "Specialized applications, targeted monitoring"
    estimated_api_calls_per_day: "Variable based on selection"
    coverage: "Customized marine parameter monitoring"

# Field definitions remain the same but with updated capability requirements
fields:
  # CO-OPS Module Fields - Updated with capability requirements
  current_water_level:
    display_name: "Current water level"
    database_field: "marine_current_water_level"
    database_type: "REAL"
    database_table: "coops_realtime"  # FIXED: was "archive"
    api_path: "data[0].v"
    service_field: "current_water_level"
    complexity_levels: ["minimal", "all"]
    unit_group: "group_distance"
    api_module: "coops_module"
    api_product: "water_level"
    description: "Current observed water level relative to station datum"
    required_capability: "water_level_observed"  # NEW: Links field to capability
    
  water_level_sigma:
    display_name: "Water level sigma"
    database_field: "marine_water_level_sigma"
    database_type: "REAL"
    database_table: "coops_realtime"  # FIXED: was "archive"
    api_path: "data[0].s"
    service_field: "water_level_sigma"
    complexity_levels: ["all"]
    unit_group: "group_distance"
    api_module: "coops_module"
    api_product: "water_level"
    description: "Standard deviation of water level measurements"
    required_capability: "water_level_observed"  # NEW
    
  water_level_flags:
    display_name: "Water level flags"
    database_field: "marine_water_level_flags"
    database_type: "VARCHAR(10)"
    database_table: "coops_realtime"  # FIXED: was "archive"
    api_path: "data[0].f"
    service_field: "water_level_flags"
    complexity_levels: ["all"]
    unit_group: "group_count"
    api_module: "coops_module"
    api_product: "water_level"
    description: "Quality flags for water level data"
    required_capability: "water_level_observed"  # NEW
    
  coastal_water_temp:
    display_name: "Coastal water temperature"
    database_field: "marine_coastal_water_temp"
    database_type: "REAL"
    database_table: "coops_realtime"  # FIXED: was "archive"
    api_path: "data[0].v"
    service_field: "coastal_water_temp"
    complexity_levels: ["minimal", "all"]
    unit_group: "group_temperature"
    api_module: "coops_module"
    api_product: "water_temperature"
    description: "Water temperature at coastal stations (limited availability)"
    required_capability: "water_temperature"  # NEW
    
  next_high_time:
    display_name: "Next high tide time"
    database_field: "marine_next_high_time"
    database_type: "TEXT"
    database_table: "coops_predictions"  # FIXED: was "archive"
    api_path: "predictions[0].t"
    service_field: "next_high_time"
    complexity_levels: ["minimal", "all"]
    unit_group: "group_time"
    api_module: "coops_module"
    api_product: "predictions"
    description: "Time of next high tide prediction"
    required_capability: "tide_predictions"  # NEW
    
  next_high_level:
    display_name: "Next high tide level"
    database_field: "marine_next_high_height"  # Note: matches error message
    database_type: "REAL"
    database_table: "coops_predictions"  # FIXED: was "archive"
    api_path: "predictions[0].v"
    service_field: "next_high_level"
    complexity_levels: ["minimal", "all"]
    unit_group: "group_distance"
    api_module: "coops_module"
    api_product: "predictions"
    description: "Water level of next high tide"
    required_capability: "tide_predictions"  # NEW
    
  next_low_time:
    display_name: "Next low tide time"
    database_field: "marine_next_low_time"
    database_type: "TEXT"
    database_table: "coops_predictions"  # FIXED: was "archive"
    api_path: "predictions[1].t"
    service_field: "next_low_time"
    complexity_levels: ["minimal", "all"]
    unit_group: "group_time"
    api_module: "coops_module"
    api_product: "predictions"
    description: "Time of next low tide prediction"
    required_capability: "tide_predictions"  # NEW
    
  next_low_level:
    display_name: "Next low tide level"
    database_field: "marine_next_low_height"  # Note: matches error message
    database_type: "REAL"
    database_table: "coops_predictions"  # FIXED: was "archive"
    api_path: "predictions[1].v"
    service_field: "next_low_level"
    complexity_levels: ["minimal", "all"]
    unit_group: "group_distance"
    api_module: "coops_module"
    api_product: "predictions"
    description: "Water level of next low tide"
    required_capability: "tide_predictions"  # NEW

  tide_range:
    display_name: "Tide range"
    database_field: "marine_tide_range"
    database_type: "REAL"
    database_table: "coops_predictions"  # FIXED: was "archive"
    api_path: "calculated"
    service_field: "tide_range"
    complexity_levels: ["all"]
    unit_group: "group_distance"
    api_module: "coops_module"
    api_product: "predictions"
    description: "Difference between high and low tide heights"
    required_capability: "tide_predictions"

  # NDBC Module Fields - No capability requirements (all NDBC stations provide similar data)
  wave_height:
    display_name: "Significant wave height"
    database_field: "marine_wave_height"
    database_type: "REAL"
    database_table: "ndbc_data"  # FIXED: was "archive"
    api_path: "WVHT"
    service_field: "wave_height"
    complexity_levels: ["minimal", "all"]
    unit_group: "group_distance"
    api_module: "ndbc_module"
    api_product: "stdmet"
    description: "Significant wave height (average of highest 1/3 of waves)"
    
  dominant_wave_period:
    display_name: "Dominant wave period"
    database_field: "marine_wave_period"  # Note: matches error message
    database_type: "REAL"
    database_table: "ndbc_data"  # FIXED: was "archive"
    api_path: "DPD"
    service_field: "dominant_wave_period"
    complexity_levels: ["minimal", "all"]
    unit_group: "group_time"
    api_module: "ndbc_module"
    api_product: "stdmet"
    description: "Dominant wave period"
    
  average_wave_period:
    display_name: "Average wave period"
    database_field: "marine_average_wave_period"
    database_type: "REAL"
    database_table: "ndbc_data"  # FIXED: was "archive"
    api_path: "APD"
    service_field: "average_wave_period"
    complexity_levels: ["all"]
    unit_group: "group_time"
    api_module: "ndbc_module"
    api_product: "stdmet"
    description: "Mean wave period"
    
  mean_wave_direction:
    display_name: "Mean wave direction"
    database_field: "marine_wave_direction"
    database_type: "REAL"
    database_table: "ndbc_data"
    api_path: "MWD"
    service_field: "mean_wave_direction"
    complexity_levels: ["minimal", "all"]
    unit_group: "group_direction"
    api_module: "ndbc_module"
    api_product: "stdmet"
    description: "Mean wave direction (degrees true)"
    
  marine_wind_direction:
    display_name: "Marine wind direction"
    database_field: "marine_wind_direction"  # Note: fixed field name to match error
    database_type: "REAL"
    database_table: "ndbc_data"  # FIXED: was "archive"
    api_path: "WDIR"
    service_field: "marine_wind_direction"
    complexity_levels: ["minimal", "all"]
    unit_group: "group_direction"
    api_module: "ndbc_module"
    api_product: "stdmet"
    description: "Wind direction at marine location"
    
  marine_wind_speed:
    display_name: "Marine wind speed"
    database_field: "marine_wind_speed"
    database_type: "REAL"
    database_table: "ndbc_data"  # FIXED: was "archive"
    api_path: "WSPD"
    service_field: "marine_wind_speed"
    complexity_levels: ["minimal", "all"]
    unit_group: "group_speed"
    api_module: "ndbc_module"
    api_product: "stdmet"
    description: "Wind speed at marine location"
    
  marine_wind_gust:
    display_name: "Marine wind gust"
    database_field: "marine_wind_gust"
    database_type: "REAL"
    database_table: "ndbc_data"  # FIXED: was "archive"
    api_path: "GST"
    service_field: "marine_wind_gust"
    complexity_levels: ["all"]
    unit_group: "group_speed"
    api_module: "ndbc_module"
    api_product: "stdmet"
    description: "Wind gust speed at marine location"
    
  marine_barometric_pressure:
    display_name: "Marine barometric pressure"
    database_field: "marine_barometric_pressure"
    database_type: "REAL"
    database_table: "ndbc_data"  # FIXED: was "archive"
    api_path: "PRES"
    service_field: "marine_barometric_pressure"
    complexity_levels: ["minimal", "all"]
    unit_group: "group_pressure"
    api_module: "ndbc_module"
    api_product: "stdmet"
    description: "Barometric pressure at marine location"
    
  marine_air_temp:
    display_name: "Marine air temperature"
    database_field: "marine_air_temp"
    database_type: "REAL"
    database_table: "ndbc_data"  # FIXED: was "archive"
    api_path: "ATMP"
    service_field: "marine_air_temp"
    complexity_levels: ["minimal", "all"]
    unit_group: "group_temperature"
    api_module: "ndbc_module"
    api_product: "stdmet"
    description: "Air temperature at marine location"
    
  marine_sea_surface_temp:
    display_name: "Sea surface temperature"
    database_field: "marine_sea_surface_temp"
    database_type: "REAL"
    database_table: "ndbc_data"  # FIXED: was "archive"
    api_path: "WTMP"
    service_field: "marine_sea_surface_temp"
    complexity_levels: ["minimal", "all"]
    unit_group: "group_temperature"
    api_module: "ndbc_module"
    api_product: "stdmet"
    description: "Sea surface water temperature"

  marine_visibility:
    display_name: "Marine visibility"
    database_field: "marine_visibility"
    database_type: "REAL"
    database_table: "ndbc_data"  # FIXED: was "archive" 
    api_path: "VIS"
    service_field: "marine_visibility"
    complexity_levels: ["all"]
    unit_group: "group_distance"
    api_module: "ndbc_module"
    api_product: "stdmet"
    description: "Visibility at marine location"

  marine_dewpoint:
    display_name: "Marine dewpoint"
    database_field: "marine_dewpoint"
    database_type: "REAL"
    database_table: "ndbc_data"  # FIXED: was "archive"
    api_path: "DEWP"
    service_field: "marine_dewpoint"
    complexity_levels: ["all"]
    unit_group: "group_temperature"
    api_module: "ndbc_module"
    api_product: "stdmet"
    description: "Dewpoint temperature at marine location"

database_schemas:
  coops_realtime:
    description: "High-frequency CO-OPS data (10-minute updates)"
    table_name: "coops_realtime"
    primary_key: ["dateTime", "station_id"]
    indexes:
      - ["dateTime"]
      - ["station_id"]
      - ["dateTime", "station_id"]
    
  coops_predictions:
    description: "Low-frequency CO-OPS predictions (6-hour updates)"
    table_name: "coops_predictions"
    primary_key: ["dateTime", "station_id"]
    indexes:
      - ["dateTime"]
      - ["station_id"]
      - ["dateTime", "station_id"]

  ndbc_data:
    description: "NDBC observational data (hourly updates)"
    table_name: "ndbc_data"
    primary_key: ["dateTime", "station_id"]
    indexes:
      - ["dateTime"]
      - ["station_id"]
      - ["dateTime", "station_id"]

config_mappings:
  yaml_to_config:
    coops_module: "coops"
    ndbc_module: "ndbc"
    
  config_to_yaml:
    coops: "coops_module"
    ndbc: "ndbc_module"